// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace MyStudiesUOA.Domain.Models;

public partial class MyStudiesUOAContext : DbContext
{
    public MyStudiesUOAContext(DbContextOptions<MyStudiesUOAContext> options)
        : base(options)
    {
    }

    public virtual DbSet<GradeLeason> GradeLeasons { get; set; }

    public virtual DbSet<Leason> Leasons { get; set; }

    public virtual DbSet<TeachesLeason> TeachesLeasons { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<GradeLeason>(entity =>
        {
            entity.ToTable("GradeLeason");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.TeachesLeason).WithMany(p => p.GradeLeasons)
                .HasForeignKey(d => d.TeachesLeasonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_GradeLeason_TeachesLeason");
        });

        modelBuilder.Entity<Leason>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<TeachesLeason>(entity =>
        {
            entity.ToTable("TeachesLeason");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.Leason).WithMany(p => p.TeachesLeasons)
                .HasForeignKey(d => d.LeasonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TeachesLeason_Leasons");

            entity.HasOne(d => d.Teacher).WithMany(p => p.TeachesLeasons)
                .HasForeignKey(d => d.TeacherId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TeachesLeason_User");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.ToTable("User");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(250);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}